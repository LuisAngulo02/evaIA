# Generated by Django 5.2.6 on 2025-09-27 16:41

import apps.presentaciones.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('presentaciones', '0003_course_presentation_delete_profile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='course',
            options={'ordering': ['name'], 'verbose_name': 'Curso', 'verbose_name_plural': 'Cursos'},
        ),
        migrations.AlterModelOptions(
            name='presentation',
            options={'ordering': ['-created_at'], 'verbose_name': 'Presentación', 'verbose_name_plural': 'Presentaciones'},
        ),
        migrations.AddField(
            model_name='course',
            name='description',
            field=models.TextField(blank=True, verbose_name='Descripción'),
        ),
        migrations.AddField(
            model_name='course',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Activo'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='ai_feedback',
            field=models.JSONField(blank=True, default=dict, verbose_name='Retroalimentación detallada IA'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='ai_score',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Puntaje IA general'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='body_language_score',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Puntaje lenguaje corporal'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='content_score',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Puntaje contenido'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='duration',
            field=models.DurationField(blank=True, null=True, verbose_name='Duración'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='file_size',
            field=models.BigIntegerField(blank=True, null=True, verbose_name='Tamaño del archivo (bytes)'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='final_score',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Puntaje final'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='fluency_score',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Puntaje fluidez'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='graded_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Calificada el'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='graded_by',
            field=models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'Docente'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_presentations', to=settings.AUTH_USER_MODEL, verbose_name='Calificada por'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='processed_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Procesada el'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='status',
            field=models.CharField(choices=[('UPLOADED', 'Subida'), ('PROCESSING', 'Procesando'), ('ANALYZED', 'Analizada por IA'), ('GRADED', 'Calificada'), ('FAILED', 'Error en procesamiento'), ('REJECTED', 'Rechazada')], default='UPLOADED', max_length=20, verbose_name='Estado'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='teacher_feedback',
            field=models.TextField(blank=True, verbose_name='Retroalimentación del docente'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='transcript',
            field=models.TextField(blank=True, verbose_name='Transcripción automática'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='uploaded_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Subida el'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='video_file',
            field=models.FileField(blank=True, null=True, upload_to=apps.presentaciones.models.upload_to_presentations, verbose_name='Archivo de video'),
        ),
        migrations.AddField(
            model_name='presentation',
            name='voice_score',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Puntaje voz y dicción'),
        ),
        migrations.AlterField(
            model_name='course',
            name='code',
            field=models.CharField(max_length=20, unique=True, verbose_name='Código'),
        ),
        migrations.AlterField(
            model_name='course',
            name='name',
            field=models.CharField(max_length=200, verbose_name='Nombre del curso'),
        ),
        migrations.AlterField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(limit_choices_to={'groups__name': 'Docente'}, on_delete=django.db.models.deletion.CASCADE, related_name='courses', to=settings.AUTH_USER_MODEL, verbose_name='Docente'),
        ),
        migrations.AlterField(
            model_name='presentation',
            name='description',
            field=models.TextField(blank=True, verbose_name='Descripción'),
        ),
        migrations.AlterField(
            model_name='presentation',
            name='student',
            field=models.ForeignKey(limit_choices_to={'groups__name': 'Estudiante'}, on_delete=django.db.models.deletion.CASCADE, related_name='presentations', to=settings.AUTH_USER_MODEL, verbose_name='Estudiante'),
        ),
        migrations.AlterField(
            model_name='presentation',
            name='title',
            field=models.CharField(max_length=200, verbose_name='Título de la presentación'),
        ),
        migrations.CreateModel(
            name='AIAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_keywords', models.JSONField(blank=True, default=list, verbose_name='Palabras clave detectadas')),
                ('content_relevance', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Relevancia del contenido')),
                ('content_depth', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Profundidad del contenido')),
                ('topic_coverage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Cobertura del tema asignado')),
                ('speech_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Velocidad del habla (palabras/minuto)')),
                ('pause_frequency', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Frecuencia de pausas')),
                ('volume_variation', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Variación de volumen')),
                ('pronunciation_clarity', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Claridad de pronunciación')),
                ('eye_contact_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Porcentaje de contacto visual')),
                ('gesture_frequency', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Frecuencia de gestos por minuto')),
                ('posture_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Puntaje de postura')),
                ('movement_naturalness', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Naturalidad del movimiento')),
                ('analyzed_at', models.DateTimeField(auto_now_add=True)),
                ('processing_time', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Tiempo de procesamiento (segundos)')),
                ('raw_data', models.JSONField(blank=True, default=dict, verbose_name='Datos brutos del análisis')),
                ('recommendations', models.JSONField(blank=True, default=list, verbose_name='Recomendaciones de mejora')),
                ('presentation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_analysis', to='presentaciones.presentation')),
            ],
            options={
                'verbose_name': 'Análisis de IA',
                'verbose_name_plural': 'Análisis de IA',
                'ordering': ['-analyzed_at'],
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('assignment_type', models.CharField(choices=[('PRESENTATION', 'Presentación Individual'), ('GROUP_PRESENTATION', 'Presentación Grupal'), ('DEBATE', 'Debate'), ('CONFERENCE', 'Conferencia'), ('PITCH', 'Pitch de Negocio'), ('SEMINAR', 'Seminario')], default='PRESENTATION', max_length=20, verbose_name='Tipo')),
                ('max_duration', models.IntegerField(help_text='Duración máxima en minutos', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)], verbose_name='Duración máxima (min)')),
                ('due_date', models.DateTimeField(verbose_name='Fecha límite')),
                ('max_score', models.DecimalField(decimal_places=2, default=100.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(999.99)], verbose_name='Puntaje máximo')),
                ('instructions', models.TextField(blank=True, verbose_name='Instrucciones')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='presentaciones.course', verbose_name='Curso')),
            ],
            options={
                'verbose_name': 'Asignación',
                'verbose_name_plural': 'Asignaciones',
                'ordering': ['-due_date'],
            },
        ),
        migrations.AddField(
            model_name='presentation',
            name='assignment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='presentaciones.assignment', verbose_name='Asignación'),
        ),
    ]
